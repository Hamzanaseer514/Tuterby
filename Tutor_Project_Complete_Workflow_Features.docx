# TutorNearby - Complete Project Workflow & Features Documentation

## Table of Contents
1. [Project Overview](#project-overview)
2. [System Architecture](#system-architecture)
3. [User Roles & Workflows](#user-roles--workflows)
4. [Frontend Features](#frontend-features)
5. [Backend API Structure](#backend-api-structure)
6. [Database Schema](#database-schema)
7. [Image Management](#image-management)
8. [Key Features & Functionality](#key-features--functionality)
9. [Technical Implementation](#technical-implementation)
10. [Deployment & Setup](#deployment--setup)

---

## Project Overview

**TutorNearby** is a comprehensive online tutoring platform that connects students with qualified tutors across the UK. The platform supports multiple user roles, real-time communication, session management, and a robust admin system for quality control.

### Core Purpose
- Connect students with qualified tutors
- Provide flexible online and in-person tutoring
- Support multiple academic levels (GCSE, A-Levels, BTECs, IB, Undergraduate)
- Offer comprehensive admin oversight and verification systems

---

## System Architecture

### Frontend (Client)
- **Framework**: React 18 with Vite
- **Styling**: Tailwind CSS + Radix UI components
- **State Management**: React hooks + Context API
- **Routing**: React Router DOM v6
- **Animations**: Framer Motion
- **Build Tool**: Vite with custom plugins for visual editing

### Backend (Server)
- **Runtime**: Node.js with Express.js
- **Database**: MongoDB with Mongoose ODM
- **Authentication**: JWT + bcrypt for password hashing
- **File Upload**: Multer for document handling
- **Email**: Nodemailer for OTP and notifications
- **Validation**: Joi for request validation

### Database
- **Primary**: MongoDB
- **Connection**: Mongoose ODM
- **Collections**: Users, TutorProfiles, StudentProfiles, ParentProfiles, TutoringSessions, Messages, etc.

---

## User Roles & Workflows

### 1. Students
**Registration & Profile Setup:**
- Register with email, password, full name, phone
- Create student profile with academic level, learning goals
- Set preferred subjects and availability
- Link to parent account (optional)

**Core Functionality:**
- Search and filter tutors by subject, location, rating
- View tutor profiles and qualifications
- Send hire requests to tutors
- Request additional help sessions
- Chat with hired tutors
- View session history and progress
- Manage learning preferences

**Dashboard Features:**
- Overview of current tutors
- Upcoming sessions
- Learning progress tracking
- Help request management

### 2. Tutors
**Registration & Verification:**
- Register with personal and professional details
- Upload qualification documents (degree, certificates, DBS checks)
- Set hourly rates and subjects taught
- Define availability schedules
- Background verification process

**Core Functionality:**
- Manage availability calendar
- Handle student hire requests
- Create and manage tutoring sessions
- Respond to student inquiries
- Upload and manage documents
- Track earnings and session history
- Chat with students

**Verification Process:**
- Document verification by admin
- Background check verification
- Reference verification
- Interview scheduling
- Profile approval workflow

### 3. Parents
**Registration & Management:**
- Register as parent account
- Link multiple student accounts
- Monitor student progress
- Manage family tutoring arrangements

**Core Functionality:**
- View all linked students
- Monitor tutoring sessions
- Access student progress reports
- Manage family account settings

### 4. Administrators
**System Management:**
- User account verification
- Tutor application processing
- Document verification
- Interview scheduling
- Quality control oversight
- System analytics and reporting

**Verification Workflow:**
- Review tutor applications
- Verify uploaded documents
- Schedule and conduct interviews
- Approve/reject tutor profiles
- Monitor system performance

---
